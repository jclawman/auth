#!/bin/bash

#Secure input of secret key to be hashed
#Enter at least 2 characters that you can remember
#Next time you need to reproduce the password just type in those two characters again
#Keys are hashed upon first run of the program. If the contents of keytest/keytest.txt are changed or moved in any way,
##the outputted strings will be different.
##Keys are generated by a sha256sum of the date and time including milliseconds with an alteration on each one.

{ echo secure input
        read -s securekey
        echo
        echo 
}
{
mkdir -p ~/keytest
{ if [ ! -s ~/keytest/keytest.txt ]; then
#Generate Personal Random keys to be added before hash of actual keys
Key1=$(date +%H:%M:%s:%h | sha256sum | base64) ; echo "$Key1" >> ~/keytest/keytest.txt
Key2=$(date +%H:%M:%s:%j | sha256sum | base64) ; echo "$Key2" >> ~/keytest/keytest.txt
Key3=$(date +%H:%M:%s:%k | sha256sum | base64) ; echo "$Key3" >> ~/keytest/keytest.txt
Key4=$(date +%H:%M:%s:%l | sha256sum | base64) ; echo "$Key4" >> ~/keytest/keytest.txt
Key5=$(date +%H:%M:%s:%z | sha256sum | base64) ; echo "$Key5" >> ~/keytest/keytest.txt
Key6=$(date +%H:%M:%s:%x | sha256sum | base64) ; echo "$Key6" >> ~/keytest/keytest.txt
Key7=$(date +%H:%M:%s:%c | sha256sum | base64) ; echo "$Key7" >> ~/keytest/keytest.txt
Key8=$(date +%H:%M:%s:%v | sha256sum | base64) ; echo "$Key8" >> ~/keytest/keytest.txt
Key9=$(date +%H:%M:%s:%b | sha256sum | base64) ; echo "$Key9" >> ~/keytest/keytest.txt
Key10=$(date +%H:%M:%s:%n | sha256sum | base64) ; echo "$Key10" >> ~/keytest/keytest.txt
Key11=$(date +%H:%M:%s:%m | sha256sum | base64) ; echo "$Key11" >> ~/keytest/keytest.txt
fi
}

}
#MD5 independently hashed output
#Choose one, copy/paste into web auth, then add at least one character to string.
#Solves for keystroke monitoring, any sort of VNC, and over-the shoulder watching
#Strings will automatically disappear, reset the terminal, and delete this command out of ~/.bash_history in 10 seconds
echo hashed output
echo
{ A="$securekey"
                A2="$(sed '1q;d' ~/keytest/keytest.txt)"
                A3="$(sed '2q;d' ~/keytest/keytest.txt)"
        A+="$A2""$A3"
        echo "$A" | sha256sum | cut -c 1-28 | awk '{print $0".-."}'
        echo
}
{ B="$securekey"
                B2="$(sed '3q;d' ~/keytest/keytest.txt)"
                B3="$(sed '4q;d' ~/keytest/keytest.txt)"
        B+="$B2""$B3"
        echo "$B" | sha256sum | cut -c 1-28 | awk '{print $0".-."}'
        echo
}

{ C="$securekey"
                C2="$(sed '5q;d' ~/keytest/keytest.txt)"
                C3="$(sed '6q;d' ~/keytest/keytest.txt)"
        C+="$C2""$C3"
        echo "$C" | sha256sum | cut -c 1-28 | awk '{print $0".-."}'
        echo
}
{ D="$securekey"
                D2="$(sed '7q;d' ~/keytest/keytest.txt)"
                D3="$(sed '8q;d' ~/keytest/keytest.txt)"
        D+="$D2""$D3"
        echo "$D" | sha256sum | cut -c 1-28 | awk '{print $0".-."}'
        echo
}
{ E="$securekey"
                E2="$(sed '9q;d' ~/keytest/keytest.txt)"
                E3="$(sed '10q;d' ~/keytest/keytest.txt)"
        E+="$E2""$E3"
        echo "$E" | sha256sum | cut -c 1-28 | awk '{print $0".-."}'
        echo
}
{ F="$securekey"
                F2="$(sed '11q;d' ~/keytest/keytest.txt)"
                F3="$(sed '12q;d' ~/keytest/keytest.txt)"
        F+="$F2""$F3"
        echo "$F" | sha256sum | cut -c 1-10 | awk '{print $0".-."}'
        echo
}
{ G="$securekey"
                G2="$(sed '13q;d' ~/keytest/keytest.txt)"
                G3="$(sed '14q;d' ~/keytest/keytest.txt)"
        G+="$G2""$G3"
        echo "$G" | sha256sum | cut -c 1-10 | awk '{print $0".-."}'
        echo
}
{ H="$securekey"
                H2="$(sed '15q;d' ~/keytest/keytest.txt)"
                H3="$(sed '16q;d' ~/keytest/keytest.txt)"
        H+="$H2""$H3"
        echo "$H" | sha256sum | cut -c 1-10 | awk '{print $0".-."}'
        echo
}
{ I="$securekey"
                I2="$(sed '17q;d' ~/keytest/keytest.txt)"
                I3="$(sed '18q;d' ~/keytest/keytest.txt)"
        I+="$I2""$I3"
        echo "$I" | sha256sum | cut -c 1-10 | awk '{print $0".-."}'
        echo
}
{ J="$securekey"
                J2="$(sed '19q;d' ~/keytest/keytest.txt)"
                J3="$(sed '20q;d' ~/keytest/keytest.txt)"
        J+="$J2""$J3"
        echo "$J" | sha256sum | cut -c 1-10 | awk '{print $0".-."}'
        echo
}

# Remove last line of ~/.bash_history
tail -q -n 1 ~/.bash_history | wc -c | xargs -I {} truncate ~/.bash_history -s -{}
{ sleep 10
}
{ echo secure exit
}
{ sleep 2
}
reset
exit
